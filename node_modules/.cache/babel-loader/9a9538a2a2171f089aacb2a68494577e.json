{"ast":null,"code":"import _defineProperty from\"/Users/shachipriya/Desktop/ShamilDocs/WebDevU-An/React_using/GoogleKeepClone/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/Users/shachipriya/Desktop/ShamilDocs/WebDevU-An/React_using/GoogleKeepClone/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/shachipriya/Desktop/ShamilDocs/WebDevU-An/React_using/GoogleKeepClone/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import AddIcon from'@mui/icons-material/Add';import Fab from'@mui/material/Fab';import Zoom from'@mui/material/Zoom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function CreateArea(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isExpanded=_useState2[0],setExpanded=_useState2[1];var _useState3=useState({title:\"\",content:\"\"}),_useState4=_slicedToArray(_useState3,2),note=_useState4[0],setNote=_useState4[1];function handleChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setNote(function(prevNote){return _objectSpread(_objectSpread({},prevNote),{},_defineProperty({},name,value));});}function submitNote(event){props.onAdd(note);setNote({title:\"\",content:\"\"});event.preventDefault();}function expand(){setExpanded(true);}return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"form\",{className:\"create-note\",children:[isExpanded?/*#__PURE__*/_jsx(\"input\",{name:\"title\",onChange:handleChange,value:note.title,placeholder:\"Title\"}):null,/*#__PURE__*/_jsx(\"textarea\",{name:\"content\",onClick:expand,onChange:handleChange,value:note.content,placeholder:\"Take a note...\",rows:isExpanded?3:1}),/*#__PURE__*/_jsx(Zoom,{in:isExpanded,children:/*#__PURE__*/_jsx(Fab,{onClick:submitNote,children:/*#__PURE__*/_jsx(AddIcon,{})})})]})});}export default CreateArea;","map":{"version":3,"sources":["/Users/shachipriya/Desktop/ShamilDocs/WebDevU-An/React_using/GoogleKeepClone/src/components/CreateArea.jsx"],"names":["React","useState","AddIcon","Fab","Zoom","CreateArea","props","isExpanded","setExpanded","title","content","note","setNote","handleChange","event","target","name","value","prevNote","submitNote","onAdd","preventDefault","expand"],"mappings":"ueAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,OAAP,KAAoB,yBAApB,CACA,MAAOC,CAAAA,GAAP,KAAgB,mBAAhB,CACA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,C,wFAGA,QAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,CAEzB,cAAgCL,QAAQ,CAAC,KAAD,CAAxC,wCAAOM,UAAP,eAAmBC,WAAnB,eAEA,eAAwBP,QAAQ,CAAC,CAC/BQ,KAAK,CAAE,EADwB,CAE/BC,OAAO,CAAE,EAFsB,CAAD,CAAhC,yCAAOC,IAAP,eAAaC,OAAb,eAKA,QAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,CAC3B,kBAAwBA,KAAK,CAACC,MAA9B,CAAQC,IAAR,eAAQA,IAAR,CAAcC,KAAd,eAAcA,KAAd,CAEAL,OAAO,CAAC,SAAAM,QAAQ,CAAI,CAClB,sCACKA,QADL,wBAEGF,IAFH,CAEUC,KAFV,GAID,CALM,CAAP,CAMD,CAED,QAASE,CAAAA,UAAT,CAAoBL,KAApB,CAA2B,CACzBR,KAAK,CAACc,KAAN,CAAYT,IAAZ,EACAC,OAAO,CAAC,CACNH,KAAK,CAAE,EADD,CAENC,OAAO,CAAE,EAFH,CAAD,CAAP,CAIAI,KAAK,CAACO,cAAN,GACD,CAED,QAASC,CAAAA,MAAT,EAAiB,CACfd,WAAW,CAAC,IAAD,CAAX,CACD,CAED,mBACE,kCACE,cAAM,SAAS,CAAC,aAAhB,WACGD,UAAU,cACX,cACE,IAAI,CAAC,OADP,CAEE,QAAQ,CAAEM,YAFZ,CAGE,KAAK,CAAEF,IAAI,CAACF,KAHd,CAIE,WAAW,CAAC,OAJd,EADW,CAQX,IATF,cAWE,iBACE,IAAI,CAAC,SADP,CAEE,OAAO,CAAEa,MAFX,CAGE,QAAQ,CAAET,YAHZ,CAIE,KAAK,CAAEF,IAAI,CAACD,OAJd,CAKE,WAAW,CAAC,gBALd,CAME,IAAI,CAAEH,UAAU,CAAC,CAAD,CAAG,CANrB,EAXF,cAmBE,KAAC,IAAD,EAAM,EAAE,CAAEA,UAAV,uBACE,KAAC,GAAD,EAAK,OAAO,CAAEY,UAAd,uBACE,KAAC,OAAD,IADF,EADF,EAnBF,GADF,EADF,CA6BD,CAED,cAAed,CAAAA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport AddIcon from '@mui/icons-material/Add';\nimport Fab from '@mui/material/Fab';\nimport Zoom from '@mui/material/Zoom';\n\n\nfunction CreateArea(props) {\n\n  const [isExpanded, setExpanded]=useState(false);\n\n  const [note, setNote] = useState({\n    title: \"\",\n    content: \"\"\n  });\n\n  function handleChange(event) {\n    const { name, value } = event.target;\n\n    setNote(prevNote => {\n      return {\n        ...prevNote,\n        [name]: value\n      };\n    });\n  }\n\n  function submitNote(event) {\n    props.onAdd(note);\n    setNote({\n      title: \"\",\n      content: \"\"\n    });\n    event.preventDefault();\n  }\n\n  function expand(){\n    setExpanded(true);\n  }\n\n  return (\n    <div>\n      <form className=\"create-note\">\n        {isExpanded ? \n        <input\n          name=\"title\"\n          onChange={handleChange}\n          value={note.title}\n          placeholder=\"Title\"\n        /> \n        :\n        null}\n\n        <textarea\n          name=\"content\"\n          onClick={expand}\n          onChange={handleChange}\n          value={note.content}\n          placeholder=\"Take a note...\"\n          rows={isExpanded?3:1}\n        />\n        <Zoom in={isExpanded}>\n          <Fab onClick={submitNote}>\n            <AddIcon />\n          </Fab>\n        </Zoom>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;\n"]},"metadata":{},"sourceType":"module"}